{"version":3,"file":"static/js/375.7aa20be0.chunk.js","mappings":"2QAGaA,EAAsBC,EAAAA,EAAAA,IAAH,mHAMnBC,EAA0BD,EAAAA,EAAAA,IAAH,4DAIvBE,EAAaF,EAAAA,EAAAA,GAAH,+CAGVG,EAAgBH,EAAAA,EAAAA,IAAH,+CAGbI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,2ZAqBVM,GAAaN,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,ia,qDClBjBO,EAAO,mCACPC,EAAQ,gCACC,SAASC,IAAgB,IAAD,IAC7BC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAM,qBADKC,EAAAA,EAAAA,MACOC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEvC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAwBA,OAvBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,WAA8BC,GAA9B,8EACEF,GAAU,GADZ,kBAGuBG,EAAAA,EAAAA,IAAA,UACdf,EADc,iBACGc,EADH,oBACsBf,EADtB,oBAHvB,UAM6B,KAHnBiB,EAHV,QAMaC,KAAKC,OANlB,uBAOMC,EAAAA,GAAAA,KAAA,sCACAP,GAAU,GARhB,0BAaIF,EAASM,EAAKC,MACdL,GAAU,GAdd,kDAgBIQ,QAAQC,MAAR,MAhBJ,2DAFc,2DACdC,CAAepB,EAoBhB,GAAE,CAACA,KAGF,gCACGS,IAAU,SAACY,EAAA,EAAD,KACX,SAACzB,EAAD,CAAY0B,GAAIpB,EAAhB,qBAECK,IACC,UAAClB,EAAD,YACE,UAACI,EAAD,YACE,gBACE8B,IACEhB,EAAMiB,YAAN,8CAC2CjB,EAAMiB,aAC7CC,EAENC,IAAU,OAALnB,QAAK,IAALA,GAAAA,EAAOoB,MAAP,OAAepB,QAAf,IAAeA,OAAf,EAAeA,EAAOoB,MAAtB,OAA8BpB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOqB,KAC1CC,MAAM,WAER,SAACrC,EAAD,UAAkB,OAALe,QAAK,IAALA,GAAAA,EAAOoB,MAAP,OAAepB,QAAf,IAAeA,OAAf,EAAeA,EAAOoB,MAAtB,OAA8BpB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOqB,WAEpD,4BACE,oCACA,0BACE,wBACGrB,EAAMuB,QACLvB,EAAMuB,OAAOC,KAAI,SAAAC,GAAK,OACpB,yBACE,uBAAIA,EAAMJ,QADHI,EAAMhC,GADK,SAO5B,oDAAqBiC,KAAKC,MAA2B,GAArB3B,EAAM4B,cAAtC,SACA,4BACE,sCACA,uBAAI5B,EAAM6B,qBAKlB,UAAC7C,EAAD,YACE,SAACG,EAAD,CAAY4B,GAAG,UAAUlB,MAAO,CAAEC,KAAMH,GAAxC,qBAGA,SAACR,EAAD,CAAY4B,GAAG,OAAOlB,MAAO,CAAEC,KAAMH,GAArC,sBAIF,SAAC,KAAD,MAGL,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: flex-start;\n  padding: 10px;\n`;\nexport const MovieCustomLinksWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n`;\nexport const MovieTitle = styled.h2`\n  text-align: center;\n`;\nexport const PosterWrapper = styled.div`\n  margin-right: 10px;\n`;\nexport const CustomLink = styled(Link)`\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  background-color: #cbcbc8;\n  padding: 10px;\n  min-width: 90px;\n  color: black;\n  font-weight: 800;\n  font-size: 20px;\n  border-radius: 10px;\n  transition: background-color 250ms ease;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n  &:hover,\n  &:focus {\n    background-color: #adadad;\n  }\n`;\nexport const GoBackLink = styled(Link)`\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  background-color: #cbcbc8;\n  padding: 10px;\n  min-width: 90px;\n  color: black;\n  font-weight: 800;\n  font-size: 20px;\n  border-radius: 10px;\n  margin-left: 10px;\n  margin-top: 10px;\n  border: none;\n  transition: background-color 250ms ease;\n\n  &:hover,\n  &:focus {\n    background-color: #adadad;\n  }\n`;\n","import {\n  Outlet,\n  useParams,\n\n  useLocation,\n\n} from 'react-router-dom';\nimport {\n  MovieCustomLinksWrapper,\n  MovieDetailsWrapper,\n  MovieTitle,\n  PosterWrapper,\n  CustomLink,\n  GoBackLink,\n} from './MovieDetails.styled';\nimport Poster from '../../img/poster.png';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport Loader from 'components/Loader/Loader';\n\nconst APP_KEY = `8fcb73b25bea8ff19ff1e6b792856201`;\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nexport default function MovieDetails() {\n  const { id } = useParams();\n  const location = useLocation();\n  const goBack = location.state?.from ?? '/';\n\n  const [movie, setMovie] = useState([]);\n  const [loader, setLoader] = useState(false);\n  useEffect(() => {\n    sendGetRequest(id);\n    async function sendGetRequest(movieId) {\n      setLoader(true);\n      try {\n        const resp = await axios.get(\n          `${BASE_URL}movie/${movieId}?api_key=${APP_KEY}&language=en-US`\n        );\n        if (resp.data.length === 0) {\n          toast.info(`There is no reviews for this movie`);\n          setLoader(false);\n\n          return;\n        }\n\n        setMovie(resp.data);\n        setLoader(false);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [id]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      <GoBackLink to={goBack}>Go back</GoBackLink>\n\n      {movie && (\n        <MovieDetailsWrapper>\n          <PosterWrapper>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n                  : Poster\n              }\n              alt={movie?.title ? movie?.title : movie?.name}\n              width=\"220px\"\n            />\n            <MovieTitle>{movie?.title ? movie?.title : movie?.name}</MovieTitle>\n          </PosterWrapper>\n          <div>\n            <h4>Genres</h4>\n            <div>\n              <ul>\n                {movie.genres &&\n                  movie.genres.map(value => (\n                    <li key={value.id}>\n                      <p>{value.name}</p>\n                    </li>\n                  ))}\n              </ul>\n            </div>\n            <h4>User rating: {`${Math.round(movie.vote_average * 10)}%`}</h4>\n            <div>\n              <h4>Overview</h4>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        </MovieDetailsWrapper>\n      )}\n      <MovieCustomLinksWrapper>\n        <CustomLink to=\"reviews\" state={{ from: goBack }}>\n          Review\n        </CustomLink>\n        <CustomLink to=\"cast\" state={{ from: goBack }}>\n          Cast\n        </CustomLink>\n      </MovieCustomLinksWrapper>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["MovieDetailsWrapper","styled","MovieCustomLinksWrapper","MovieTitle","PosterWrapper","CustomLink","Link","GoBackLink","APP_KEY","BASE_URL","MovieDetails","id","useParams","goBack","useLocation","state","from","useState","movie","setMovie","loader","setLoader","useEffect","movieId","axios","resp","data","length","toast","console","error","sendGetRequest","Loader","to","src","poster_path","Poster","alt","title","name","width","genres","map","value","Math","round","vote_average","overview"],"sourceRoot":""}