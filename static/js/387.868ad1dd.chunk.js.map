{"version":3,"file":"static/js/387.868ad1dd.chunk.js","mappings":"wSACaA,EAAcC,EAAAA,EAAAA,IAAH,gFAKXC,EAAWD,EAAAA,EAAAA,GAAH,8RAYRE,EAAeF,EAAAA,EAAAA,GAAH,yR,SCXnBG,EAAO,mCACPC,EAAQ,gCACC,SAASC,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAuBA,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,WAA8BC,GAA9B,8EACEF,GAAU,GADZ,kBAGuBG,EAAAA,EAAAA,IAAA,UACdX,EADc,iBACGE,EADH,4BACyBH,EADzB,oBAHvB,UAMkC,KAHxBa,EAHV,QAMaC,KAAKR,KAAKS,OANvB,uBAOMC,EAAAA,GAAAA,KAAA,mCACAP,GAAU,GARhB,0BAYIF,EAAQM,EAAKC,KAAKR,MAClBG,GAAU,GAbd,kDAeIQ,QAAQC,MAAR,MAfJ,2DAFc,2DACdC,CAAehB,EAmBhB,GAAE,CAACA,KAGF,UAACP,EAAD,WACGY,IAAU,SAACY,EAAA,EAAD,IACM,IAAhBd,EAAKS,SACJ,SAACjB,EAAD,UACGQ,EAAKe,KAAI,SAAAC,GAAK,OACb,UAACvB,EAAD,YACE,wBAAKuB,EAAMC,QACX,gBACEC,IACEF,EAAMG,aAAN,6CAC0CH,EAAMG,cAC5CC,EAENC,IAAKL,EAAMC,KACXK,MAAM,SAER,sCAAcN,EAAMO,eAXHP,EAAMnB,GADZ,QAmBxB,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const CastWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px;\n`;\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 10px;\n  -webkit-box-shadow: 0px 0px 11px 0px rgba(0, 0, 0, 0.53);\n  box-shadow: 0px 0px 11px 0px rgba(0, 0, 0, 0.53);\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Loader from 'components/Loader/Loader';\nimport Placeholder from '../../img/unknown.png';\nimport { toast } from 'react-toastify';\nimport { CastList, CastListItem, CastWrapper } from './Cast.styled';\nconst APP_KEY = `8fcb73b25bea8ff19ff1e6b792856201`;\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nexport default function Cast() {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  const [loader, setLoader] = useState(false);\n  useEffect(() => {\n    sendGetRequest(id);\n    async function sendGetRequest(link) {\n      setLoader(true);\n      try {\n        const resp = await axios.get(\n          `${BASE_URL}movie/${id}/credits?api_key=${APP_KEY}&language=en-US`\n        );\n        if (resp.data.cast.length === 0) {\n          toast.info(`There is no cast for this movie`);\n          setLoader(false);\n          return;\n        }\n\n        setCast(resp.data.cast);\n        setLoader(false);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [id]);\n\n  return (\n    <CastWrapper>\n      {loader && <Loader />}\n      {cast.length !== 0 && (\n        <CastList>\n          {cast.map(value => (\n            <CastListItem key={value.id}>\n              <h3>{value.name}</h3>\n              <img\n                src={\n                  value.profile_path\n                    ? `https://image.tmdb.org/t/p/original${value.profile_path}`\n                    : Placeholder\n                }\n                alt={value.name}\n                width=\"200\"\n              />\n              <p>Character:{value.character}</p>\n            </CastListItem>\n          ))}\n        </CastList>\n      )}\n    </CastWrapper>\n  );\n}\n"],"names":["CastWrapper","styled","CastList","CastListItem","APP_KEY","BASE_URL","Cast","id","useParams","useState","cast","setCast","loader","setLoader","useEffect","link","axios","resp","data","length","toast","console","error","sendGetRequest","Loader","map","value","name","src","profile_path","Placeholder","alt","width","character"],"sourceRoot":""}