{"version":3,"file":"static/js/375.95ebb0b2.chunk.js","mappings":"uQACaA,EAAsBC,EAAAA,EAAAA,IAAH,4JAQnBC,EAA0BD,EAAAA,EAAAA,IAAH,4DAIvBE,EAAaF,EAAAA,EAAAA,GAAH,+C,qDCAjBG,GAAaH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,+SAgBVK,EAAO,mCACPC,EAAQ,gCACC,SAASC,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAyBA,OAxBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,WAA8BC,GAA9B,8EACEF,GAAU,GADZ,kBAGuBG,EAAAA,EAAAA,IAAA,UACdX,EADc,iBACGU,EADH,oBACsBX,EADtB,oBAHvB,UAGUa,EAHV,OAMIC,QAAQC,IAAI,SAAUF,GACG,IAArBA,EAAKG,KAAKC,OAPlB,wBAQMC,EAAAA,GAAAA,KAAA,sCACAT,GAAU,GAThB,2BAcIF,EAASM,EAAKG,MACdP,GAAU,GAfd,kDAiBIK,QAAQK,MAAR,MAjBJ,2DAFc,2DACdC,CAAejB,EAqBhB,GAAE,CAACA,KAGF,gCACGK,IAAU,SAACa,EAAA,EAAD,IAEVf,IACC,UAACZ,EAAD,YACE,gBACE4B,IACEhB,EAAMiB,YAAN,8CAC2CjB,EAAMiB,aAC7CC,EAENC,IAAU,OAALnB,QAAK,IAALA,GAAAA,EAAOoB,MAAP,OAAepB,QAAf,IAAeA,OAAf,EAAeA,EAAOoB,MAAtB,OAA8BpB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOqB,KAC1CC,MAAM,WAER,SAAC/B,EAAD,UAAkB,OAALS,QAAK,IAALA,GAAAA,EAAOoB,MAAP,OAAepB,QAAf,IAAeA,OAAf,EAAeA,EAAOoB,MAAtB,OAA8BpB,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOqB,WAGtD,UAAC/B,EAAD,YACE,SAACE,EAAD,CAAY+B,GAAG,UAAf,qBACA,SAAC/B,EAAD,CAAY+B,GAAG,OAAf,sBAEF,SAAC,KAAD,MAGL,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n  width: 250px;\n`;\nexport const MovieCustomLinksWrapper = styled.div`\n  display: flex;\n  padding: 10px;\n`;\nexport const MovieTitle = styled.h2`\n  text-align: center;\n`;\n","import { Link, Outlet, useParams } from 'react-router-dom';\nimport {\n  MovieCustomLinksWrapper,\n  MovieDetailsWrapper,\n  MovieTitle,\n} from './MovieDetails.styled';\nimport Poster from '../../img/poster.png';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport styled from '@emotion/styled';\nimport Loader from 'components/Loader/Loader';\n\nconst CustomLink = styled(Link)`\n  display: inline-block;\n  text-align: center;\n  text-decoration: none;\n  background-color: #cbcbc8;\n  padding: 10px;\n  min-width: 90px;\n  color: black;\n  font-weight: 800;\n  font-size: 20px;\n  border-radius: 10px;\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nconst APP_KEY = `8fcb73b25bea8ff19ff1e6b792856201`;\nconst BASE_URL = `https://api.themoviedb.org/3/`;\nexport default function MovieDetails() {\n  const { id } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [loader, setLoader] = useState(false);\n  useEffect(() => {\n    sendGetRequest(id);\n    async function sendGetRequest(movieId) {\n      setLoader(true);\n      try {\n        const resp = await axios.get(\n          `${BASE_URL}movie/${movieId}?api_key=${APP_KEY}&language=en-US`\n        );\n        console.log('resp: ', resp);\n        if (resp.data.length === 0) {\n          toast.info(`There is no reviews for this movie`);\n          setLoader(false);\n\n          return;\n        }\n\n        setMovie(resp.data);\n        setLoader(false);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [id]);\n\n  return (\n    <>\n      {loader && <Loader />}\n\n      {movie && (\n        <MovieDetailsWrapper>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\n                : Poster\n            }\n            alt={movie?.title ? movie?.title : movie?.name}\n            width=\"250px\"\n          />\n          <MovieTitle>{movie?.title ? movie?.title : movie?.name}</MovieTitle>\n        </MovieDetailsWrapper>\n      )}\n      <MovieCustomLinksWrapper>\n        <CustomLink to=\"reviews\">Review</CustomLink>\n        <CustomLink to=\"cast\">Cast</CustomLink>\n      </MovieCustomLinksWrapper>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["MovieDetailsWrapper","styled","MovieCustomLinksWrapper","MovieTitle","CustomLink","Link","APP_KEY","BASE_URL","MovieDetails","id","useParams","useState","movie","setMovie","loader","setLoader","useEffect","movieId","axios","resp","console","log","data","length","toast","error","sendGetRequest","Loader","src","poster_path","Poster","alt","title","name","width","to"],"sourceRoot":""}